[{"/Users/mykhailo/Desktop/Test/hb-employees/src/App.tsx":"1","/Users/mykhailo/Desktop/Test/hb-employees/src/api/api.ts":"2","/Users/mykhailo/Desktop/Test/hb-employees/src/index.tsx":"3","/Users/mykhailo/Desktop/Test/hb-employees/src/routes.tsx":"4","/Users/mykhailo/Desktop/Test/hb-employees/src/components/Employees/Employees.tsx":"5","/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesBirthday/EmployeesBirthday.tsx":"6","/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesList/EmployeesList.tsx":"7","/Users/mykhailo/Desktop/Test/hb-employees/src/hook/users.ts":"8","/Users/mykhailo/Desktop/Test/hb-employees/src/helpers/sortEmployees.ts":"9","/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesList/LetterGroup/LetterGroup.tsx":"10","/Users/mykhailo/Desktop/Test/hb-employees/src/context/UsersContext.tsx":"11"},{"size":163,"mtime":1607164154328,"results":"12","hashOfConfig":"13"},{"size":366,"mtime":1607156214814,"results":"14","hashOfConfig":"13"},{"size":367,"mtime":1607159991948,"results":"15","hashOfConfig":"13"},{"size":364,"mtime":1607158384808,"results":"16","hashOfConfig":"13"},{"size":618,"mtime":1607172816324,"results":"17","hashOfConfig":"13"},{"size":435,"mtime":1607168711775,"results":"18","hashOfConfig":"13"},{"size":693,"mtime":1607166985663,"results":"19","hashOfConfig":"13"},{"size":1669,"mtime":1607172162154,"results":"20","hashOfConfig":"13"},{"size":570,"mtime":1607164098905,"results":"21","hashOfConfig":"13"},{"size":1367,"mtime":1607172777762,"results":"22","hashOfConfig":"13"},{"size":788,"mtime":1607172094608,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9cv1ba",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mykhailo/Desktop/Test/hb-employees/src/App.tsx",["50"],"/Users/mykhailo/Desktop/Test/hb-employees/src/api/api.ts",["51","52"],"import axios from \"axios\";\n\nexport class BaseApi {\n  private static apiHostName = `https://yalantis-react-school-api.yalantis.com/api`;\n\n  static get(route: string) {\n    return axios.get(`${this.apiHostName}${route}`);\n  }\n}\n\nexport class UsersApi extends BaseApi {\n  static getUsers() {\n    return this.get(\"/task0/users\").then((response) => response.data);\n  }\n}\n","/Users/mykhailo/Desktop/Test/hb-employees/src/index.tsx",[],["53"],"/Users/mykhailo/Desktop/Test/hb-employees/src/routes.tsx",["54"],"/Users/mykhailo/Desktop/Test/hb-employees/src/components/Employees/Employees.tsx",["55"],"/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesBirthday/EmployeesBirthday.tsx",["56","57","58"],"/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesList/EmployeesList.tsx",["59"],"import React from \"react\";\nimport styles from \"./EmployeesList.module.scss\";\nimport { EmployeesListType } from \"./type\";\nimport { LetterGroup } from \"./LetterGroup/LetterGroup\";\nimport { sortEmployees } from \"../../helpers/sortEmployees\";\n\nexport const EmployeesList = ({ employees }: EmployeesListType) => {\n  return (\n    <div className={styles.listEmployees}>\n      <div className={styles.title}>Employees</div>\n      <div className={styles.arrayEmployees}>\n        {sortEmployees(employees).map((element) => (\n          <div className={styles.groupLetter} key={element.alphabet}>\n            <LetterGroup employees={element} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","/Users/mykhailo/Desktop/Test/hb-employees/src/hook/users.ts",["60","61"],"/Users/mykhailo/Desktop/Test/hb-employees/src/helpers/sortEmployees.ts",["62"],"import { Employees } from \"../types/type\";\n\nexport const sortEmployees = (employees: Array<Employees>) => {\n  const sortList: Array<{ alphabet: string; list: Array<Employees> }> = [];\n  for (let code = 65; code < 91; code++) {\n    sortList.push({ alphabet: String.fromCharCode(code), list: [] });\n    employees.forEach((element) => {\n      if (\n        element.lastName[0] === String.fromCharCode(code) ||\n        element.lastName[0] === String.fromCharCode(code + 32)\n      ) {\n        sortList[code - 65].list.push(element);\n      }\n    });\n  }\n\n  return sortList;\n};\n","/Users/mykhailo/Desktop/Test/hb-employees/src/components/EmployeesList/LetterGroup/LetterGroup.tsx",["63"],"/Users/mykhailo/Desktop/Test/hb-employees/src/context/UsersContext.tsx",[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":20,"nodeType":"66","messageId":"67","endLine":4,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":6,"column":3,"nodeType":"68","messageId":"67","endLine":6,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":12,"column":3,"nodeType":"68","messageId":"67","endLine":12,"endColumn":20},{"ruleId":"69","replacedBy":"70"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":23,"nodeType":"66","messageId":"67","endLine":5,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":7,"column":26,"nodeType":"66","messageId":"67","endLine":7,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":4,"column":34,"nodeType":"66","messageId":"67","endLine":4,"endColumn":65},{"ruleId":"64","severity":1,"message":"71","line":4,"column":35,"nodeType":"72","messageId":"73","endLine":4,"endColumn":61},{"ruleId":"74","severity":1,"message":"75","line":4,"column":58,"nodeType":"76","messageId":"77","endLine":4,"endColumn":61,"suggestions":"78"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":30,"nodeType":"66","messageId":"67","endLine":7,"endColumn":67},{"ruleId":"74","severity":1,"message":"75","line":14,"column":52,"nodeType":"76","messageId":"77","endLine":14,"endColumn":55,"suggestions":"79"},{"ruleId":"64","severity":1,"message":"65","line":38,"column":25,"nodeType":"66","messageId":"67","endLine":38,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":3,"column":30,"nodeType":"66","messageId":"67","endLine":3,"endColumn":62},{"ruleId":"64","severity":1,"message":"65","line":6,"column":28,"nodeType":"66","messageId":"67","endLine":6,"endColumn":63},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionExpression","jest/no-expect-resolves",["80"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],["83","84"],"no-restricted-matchers",{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"88","fix":"92","desc":"90"},"suggestUnknown",{"range":"93","text":"94"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"93","text":"95"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"96","text":"94"},{"range":"96","text":"95"},[139,142],"unknown","never",[423,426]]